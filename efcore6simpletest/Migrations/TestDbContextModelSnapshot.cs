// <auto-generated />
using System;
using EFCore6SimpleTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace efcore6simpletest.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-rc.1.21411.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCore6SimpleTest.MainEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("EndTime");

                    b.Property<DateTime>("StartTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("StartTime");

                    b.HasKey("Id");

                    b.ToTable("MainEntity", (string)null);

                    b
                        .ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("ConfHistory");
                                ttb.HasPeriodStart("StartTime").HasColumnName("StartTime");
                                ttb.HasPeriodEnd("EndTime").HasColumnName("EndTime");
                            }
                        ));
                });

            modelBuilder.Entity("EFCore6SimpleTest.MainEntity", b =>
                {
                    b.OwnsOne("EFCore6SimpleTest.OwnedEntity", "OwnedEntity", b1 =>
                        {
                            b1.Property<int>("MainEntityId")
                                .HasColumnType("int");

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("EndTime")
                                .ValueGeneratedOnAddOrUpdate()
                                .HasColumnType("datetime2")
                                .HasColumnName("EndTime");

                            b1.Property<DateTime>("StartTime")
                                .ValueGeneratedOnAddOrUpdate()
                                .HasColumnType("datetime2")
                                .HasColumnName("StartTime");

                            b1.HasKey("MainEntityId");

                            b1.ToTable("OwnedEntity", (string)null);

                            b1
                                .ToTable(tb => tb.IsTemporal(ttb =>
                                    {
                                        ttb.UseHistoryTable("OwnedEntityHistory");
                                        ttb.HasPeriodStart("StartTime").HasColumnName("StartTime");
                                        ttb.HasPeriodEnd("EndTime").HasColumnName("EndTime");
                                    }
                                ));

                            b1.WithOwner()
                                .HasForeignKey("MainEntityId");
                        });

                    b.Navigation("OwnedEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
